{"ast":null,"code":"var _jsxFileName = \"/Users/raffimendoza/pomodoroTimer/src/Components/NewTaskForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport '../styles/newTask.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NewTaskForm(props) {\n  _s();\n\n  const [textareaIsHidden, setTextareaIsHidden] = useState(true);\n  const [formFields, setFormFields] = useState({\n    title: '',\n    cycles: 0,\n    body: '',\n    completed: false\n  });\n\n  function handleSubmitNewTask(event) {\n    event.preventDefault();\n\n    if (formFields.title.trim() === '') {\n      alert('Add a title for you task.');\n      return;\n    }\n\n    let newTask = formFields;\n    newTask.completed = false;\n    let storedTasks = localStorage.getItem('tasks') !== null ? JSON.parse(localStorage.getItem('tasks')) : [];\n    storedTasks.push(newTask);\n    window.localStorage.setItem('tasks', JSON.stringify(storedTasks));\n    props.updateTasks.setTasks(storedTasks);\n    props.closeModal(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"newTask-container\",\n    onSubmit: handleSubmitNewTask,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"task-title\",\n      placeholder: \"What do we have for today?\",\n      value: formFields.title,\n      onChange: event => setFormFields({ ...formFields,\n        title: event.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addDescription\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setTextareaIsHidden(!textareaIsHidden),\n        children: \"+ Add description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"task-body\",\n        placeholder: \"More detals...\",\n        hidden: textareaIsHidden,\n        onChange: event => setFormFields({ ...formFields,\n          body: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => props.closeModal(true),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        id: \"save-button\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewTaskForm, \"MN+FsUhnp4hitEfLr2IeddUSh1w=\");\n\n_c = NewTaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTaskForm\");","map":{"version":3,"names":["useState","NewTaskForm","props","textareaIsHidden","setTextareaIsHidden","formFields","setFormFields","title","cycles","body","completed","handleSubmitNewTask","event","preventDefault","trim","alert","newTask","storedTasks","localStorage","getItem","JSON","parse","push","window","setItem","stringify","updateTasks","setTasks","closeModal","target","value"],"sources":["/Users/raffimendoza/pomodoroTimer/src/Components/NewTaskForm.jsx"],"sourcesContent":["import { useState } from 'react'\n\nimport '../styles/newTask.scss'\n\nexport function NewTaskForm (props) {\n  const [ textareaIsHidden, setTextareaIsHidden ] = useState(true);\n  const [ formFields, setFormFields ] = useState({title: '', cycles: 0, body: '', completed: false});\n\n  function handleSubmitNewTask (event) {\n    event.preventDefault();\n\n    if (formFields.title.trim() === '') {\n      alert('Add a title for you task.')\n      return;\n    }\n\n    let newTask = formFields;\n    newTask.completed = false;\n    \n    let storedTasks = (localStorage.getItem('tasks') !== null) ? JSON.parse(localStorage.getItem('tasks')) : [];\n    storedTasks.push(newTask);\n    window.localStorage.setItem('tasks', JSON.stringify(storedTasks));\n\n    props.updateTasks.setTasks(storedTasks);\n    props.closeModal(true);\n  }\n\n  return (\n    <form className='newTask-container' onSubmit={ handleSubmitNewTask }>\n      <input \n        type=\"text\" \n        name=\"task-title\" \n        placeholder='What do we have for today?'\n        value={formFields.title}\n        onChange={ event => setFormFields({...formFields, title: event.target.value }) }\n      />\n      <div className='addDescription'>\n        <button\n          type='button' \n          onClick={ () => setTextareaIsHidden(!textareaIsHidden) }>\n          + Add description\n        </button>\n\n        <textarea \n          name=\"task-body\" \n          placeholder=\"More detals...\"\n          hidden={textareaIsHidden}\n          onChange={ event => setFormFields({...formFields, body: event.target.value }) }\n        ></textarea>\n      </div>\n\n      <footer>\n        <button\n          type='button' \n          onClick={ () => props.closeModal(true) }\n          >Cancel</button>\n        <button \n          type='submit'\n          id='save-button'\n          >Save</button>\n      </footer>\n    </form>\n  )\n}"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,wBAAP;;AAEA,OAAO,SAASC,WAAT,CAAsBC,KAAtB,EAA6B;EAAA;;EAClC,MAAM,CAAEC,gBAAF,EAAoBC,mBAApB,IAA4CJ,QAAQ,CAAC,IAAD,CAA1D;EACA,MAAM,CAAEK,UAAF,EAAcC,aAAd,IAAgCN,QAAQ,CAAC;IAACO,KAAK,EAAE,EAAR;IAAYC,MAAM,EAAE,CAApB;IAAuBC,IAAI,EAAE,EAA7B;IAAiCC,SAAS,EAAE;EAA5C,CAAD,CAA9C;;EAEA,SAASC,mBAAT,CAA8BC,KAA9B,EAAqC;IACnCA,KAAK,CAACC,cAAN;;IAEA,IAAIR,UAAU,CAACE,KAAX,CAAiBO,IAAjB,OAA4B,EAAhC,EAAoC;MAClCC,KAAK,CAAC,2BAAD,CAAL;MACA;IACD;;IAED,IAAIC,OAAO,GAAGX,UAAd;IACAW,OAAO,CAACN,SAAR,GAAoB,KAApB;IAEA,IAAIO,WAAW,GAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,IAAnC,GAA2CC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAA3C,GAAuF,EAAzG;IACAF,WAAW,CAACK,IAAZ,CAAiBN,OAAjB;IACAO,MAAM,CAACL,YAAP,CAAoBM,OAApB,CAA4B,OAA5B,EAAqCJ,IAAI,CAACK,SAAL,CAAeR,WAAf,CAArC;IAEAf,KAAK,CAACwB,WAAN,CAAkBC,QAAlB,CAA2BV,WAA3B;IACAf,KAAK,CAAC0B,UAAN,CAAiB,IAAjB;EACD;;EAED,oBACE;IAAM,SAAS,EAAC,mBAAhB;IAAoC,QAAQ,EAAGjB,mBAA/C;IAAA,wBACE;MACE,IAAI,EAAC,MADP;MAEE,IAAI,EAAC,YAFP;MAGE,WAAW,EAAC,4BAHd;MAIE,KAAK,EAAEN,UAAU,CAACE,KAJpB;MAKE,QAAQ,EAAGK,KAAK,IAAIN,aAAa,CAAC,EAAC,GAAGD,UAAJ;QAAgBE,KAAK,EAAEK,KAAK,CAACiB,MAAN,CAAaC;MAApC,CAAD;IALnC;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MAAK,SAAS,EAAC,gBAAf;MAAA,wBACE;QACE,IAAI,EAAC,QADP;QAEE,OAAO,EAAG,MAAM1B,mBAAmB,CAAC,CAACD,gBAAF,CAFrC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAOE;QACE,IAAI,EAAC,WADP;QAEE,WAAW,EAAC,gBAFd;QAGE,MAAM,EAAEA,gBAHV;QAIE,QAAQ,EAAGS,KAAK,IAAIN,aAAa,CAAC,EAAC,GAAGD,UAAJ;UAAgBI,IAAI,EAAEG,KAAK,CAACiB,MAAN,CAAaC;QAAnC,CAAD;MAJnC;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QARF,eAuBE;MAAA,wBACE;QACE,IAAI,EAAC,QADP;QAEE,OAAO,EAAG,MAAM5B,KAAK,CAAC0B,UAAN,CAAiB,IAAjB,CAFlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAKE;QACE,IAAI,EAAC,QADP;QAEE,EAAE,EAAC,aAFL;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QAvBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoCD;;GA3De3B,W;;KAAAA,W"},"metadata":{},"sourceType":"module"}