{"ast":null,"code":"var _jsxFileName = \"/Users/raffimendoza/pomodoroTimer/src/Components/Timer.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Modal } from \"./Modal\";\nimport '../styles/timer.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst timerTypes = {\n  NORMAL: 'NORMAL',\n  SHORT_BREAK: 'SHORT_BREAK',\n  LONG_BREAK: 'LONG_BREAK'\n};\nexport function Timer() {\n  _s();\n\n  const [selectedTimer, setSelectedTimer] = useState(timerTypes.NORMAL);\n  const [paused, pauseTimer] = useState(true);\n  const [change, changeNow] = useState(false);\n  const [currentCycle, changeCycle] = useState(0);\n  const [min, setMin] = useState(25);\n  const [sec, setSec] = useState(0);\n  const [modalInfo, setModalInfo] = useState({\n    visible: false,\n    title: 'Good Job',\n    body: 'Now we have a shrot break for a coffee :)'\n  });\n\n  function setMinutes(timerType) {\n    setSelectedTimer(timerType);\n    if (timerType === timerTypes.NORMAL) setMin(25);\n    if (timerType === timerTypes.SHORT_BREAK) setMin(5);\n    if (timerType === timerTypes.LONG_BREAK) setMin(15);\n  }\n\n  const setTimerType = type => {\n    if (selectedTimer !== type) {\n      pauseTimer(true);\n      changeNow(true);\n      setMinutes(type);\n    }\n  };\n\n  const alternateCycles = () => {\n    if (currentCycle < 2) {\n      if (selectedTimer === timerTypes.NORMAL) {\n        setModalInfo({ ...modalInfo,\n          visible: true\n        });\n        setTimerType(timerTypes.SHORT_BREAK);\n      } else {\n        setModalInfo({ ...modalInfo,\n          visible: true\n        });\n        setTimerType(timerTypes.NORMAL);\n        changeCycle(currentCycle + 1);\n      }\n    } else {\n      setModalInfo({ ...modalInfo,\n        visible: true\n      });\n      setTimerType(timerTypes.LONG_BREAK);\n      changeCycle(0);\n    }\n  };\n\n  const displayMinutes = min > 9 ? min : `0${min}`;\n  const displaySeconds = sec > 9 ? sec : `0${sec}`;\n  useEffect(() => {\n    if (!paused) {\n      document.title = `${displayMinutes}:${displaySeconds} - Don't stop!`;\n      var interval = setInterval(() => {\n        if (sec === 0) {\n          if (min === 0) {\n            pauseTimer(true);\n            alternateCycles();\n            clearInterval(interval);\n            return;\n          }\n\n          setSec(59);\n          setMin(min - 1);\n        } else {\n          setSec(sec - 1);\n        }\n      }, 1000);\n    } else {\n      document.title = 'Pomodoro - IST 263 Study References';\n\n      if (change) {\n        setSec(0);\n        changeNow(false);\n      }\n    }\n\n    return () => {\n      clearInterval(interval);\n    }; // eslint-disable-next-line\n  }, [paused, min, sec]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [modalInfo.visible ? /*#__PURE__*/_jsxDEV(Modal, {\n      modalInfo: {\n        modalInfo,\n        setModalInfo\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"pomodoroBtn\",\n          className: `btn ${selectedTimer === timerTypes.NORMAL && 'selected'}`,\n          onClick: () => {\n            if (selectedTimer === timerTypes.NORMAL || window.confirm('Press OK to switch timers.')) {\n              setTimerType(timerTypes.NORMAL);\n            }\n          },\n          children: \"Pomodoro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"shortBreackBtn\",\n          className: `btn ${selectedTimer === timerTypes.SHORT_BREAK && 'selected'}`,\n          onClick: () => {\n            if (selectedTimer === timerTypes.SHORT_BREAK || window.confirm('Press OK to switch timers.')) {\n              setTimerType(timerTypes.SHORT_BREAK);\n            }\n          },\n          children: \"Short break\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"longBreakBtn\",\n          className: `btn ${selectedTimer === timerTypes.LONG_BREAK && 'selected'}`,\n          onClick: () => {\n            if (selectedTimer === timerTypes.LONG_BREAK || window.confirm('Press OK to switch timers.')) {\n              setTimerType(timerTypes.LONG_BREAK);\n            }\n          },\n          children: \"Long break\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [displayMinutes, \":\", displaySeconds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => pauseTimer(!paused),\n          children: paused ? 'START' : 'STOP'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Timer, \"x1+XZFHdOvteCq7vtjJtvIWfkXk=\");\n\n_c = Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["useEffect","useState","Modal","timerTypes","NORMAL","SHORT_BREAK","LONG_BREAK","Timer","selectedTimer","setSelectedTimer","paused","pauseTimer","change","changeNow","currentCycle","changeCycle","min","setMin","sec","setSec","modalInfo","setModalInfo","visible","title","body","setMinutes","timerType","setTimerType","type","alternateCycles","displayMinutes","displaySeconds","document","interval","setInterval","clearInterval","window","confirm"],"sources":["/Users/raffimendoza/pomodoroTimer/src/Components/Timer.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Modal } from \"./Modal\";\nimport '../styles/timer.scss'\n\nconst timerTypes = {\n  NORMAL: 'NORMAL',\n  SHORT_BREAK: 'SHORT_BREAK',\n  LONG_BREAK: 'LONG_BREAK'\n}\n\nexport function Timer () {\n  \n  const [ selectedTimer, setSelectedTimer ] = useState(timerTypes.NORMAL);\n  const [ paused , pauseTimer ] = useState(true);\n  const [ change, changeNow ] = useState(false);\n  const [ currentCycle, changeCycle ] = useState(0);\n  const [ min, setMin ] = useState(25);\n  const [ sec, setSec ] = useState(0);\n\n  const [ modalInfo, setModalInfo ] = useState({visible: false, title:'Good Job', body:'Now we have a shrot break for a coffee :)'});\n  \n  function setMinutes (timerType) {\n    \n    setSelectedTimer(timerType);\n    \n    if (timerType === timerTypes.NORMAL) setMin(25);\n    if (timerType === timerTypes.SHORT_BREAK) setMin(5);\n    if (timerType === timerTypes.LONG_BREAK) setMin(15);\n  }\n  \n  const setTimerType = (type) => {\n    if (selectedTimer !== type) {\n      pauseTimer(true);\n      changeNow(true);\n      setMinutes(type);\n    }\n  }\n  \n  const alternateCycles = () => {\n    if (currentCycle < 2) {\n      if (selectedTimer === timerTypes.NORMAL) {\n        setModalInfo({...modalInfo, visible: true})\n        setTimerType(timerTypes.SHORT_BREAK);\n      } else {\n        setModalInfo({...modalInfo, visible: true})\n        setTimerType(timerTypes.NORMAL);\n        changeCycle(currentCycle+1);\n      }\n    } else {\n      setModalInfo({...modalInfo, visible: true})\n      setTimerType(timerTypes.LONG_BREAK);\n      changeCycle(0);\n    }\n  }\n\n  const displayMinutes = min > 9 ? min : `0${min}`\n  const displaySeconds = sec > 9 ? sec : `0${sec}`\n\n  useEffect(() => {\n    if (!paused) {\n      document.title = `${displayMinutes}:${displaySeconds} - Don't stop!`\n      var interval = setInterval( ()=>{\n        if (sec === 0) {\n          if (min === 0) {\n            pauseTimer(true);\n            alternateCycles();\n            clearInterval(interval);\n            return;\n          }\n          setSec(59);\n          setMin(min-1);\n        } else {\n          setSec(sec-1);\n        }  \n      }, 1000);\n    } else {\n      document.title = 'Pomodoro - IST 263 Study References'\n      if (change) {\n        setSec(0);\n        changeNow(false);\n      }\n    }    \n\n    return () => {\n      clearInterval(interval);\n    }\n  // eslint-disable-next-line\n  }, [paused, min, sec]);\n  \n  return (\n    <main>\n      { modalInfo.visible ? <Modal modalInfo={ {modalInfo, setModalInfo} } /> : '' }\n      <div className=\"container\">\n        <div className=\"buttons\">\n          <button \n            id=\"pomodoroBtn\" className={`btn ${selectedTimer === timerTypes.NORMAL && 'selected'}`}\n            onClick={ () => { if (selectedTimer === timerTypes.NORMAL || window.confirm('Press OK to switch timers.')) { setTimerType(timerTypes.NORMAL) }}}>\n            Pomodoro\n          </button>\n          <button \n            id=\"shortBreackBtn\" className={`btn ${selectedTimer === timerTypes.SHORT_BREAK && 'selected'}`}\n            onClick={ () => { if (selectedTimer === timerTypes.SHORT_BREAK || window.confirm('Press OK to switch timers.')) { setTimerType(timerTypes.SHORT_BREAK) }}}>\n            Short break\n          </button>\n          <button \n            id=\"longBreakBtn\" className={`btn ${selectedTimer === timerTypes.LONG_BREAK && 'selected'}`}\n            onClick={ () => { if (selectedTimer === timerTypes.LONG_BREAK || window.confirm('Press OK to switch timers.')) { setTimerType(timerTypes.LONG_BREAK) }}}>\n            Long break\n          </button> \n        </div>\n\n        <div className=\"timer\">\n          <h3>{displayMinutes}:{displaySeconds}</h3>\n          <button onClick={ () => pauseTimer(!paused) }>{ paused ? 'START' : 'STOP' }</button>\n        </div>\n\n      </div>\n\n    </main>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}